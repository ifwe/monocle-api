-
    mockValue = function(details) {
        if (details.hasOwnProperty('sample')) {
            return details.sample;
        }
        switch (details.type) {
            case 'string':
                return 'FPO string';

            case 'integer':
            case 'number':
                var min = parseInt(details.minimum);
                var max = parseInt(details.maximum);
                if (isNaN(min) && isNaN(max)) return 123;
                if (isNaN(min) && !isNaN(max)) return max;
                if (!isNaN(min) && isNaN(max)) return min;
                return Math.ceil(Math.random() * ((max || 100) - min)) + min;

            case 'boolean':
                return true;

            case 'array':
                return [mockValue(details.items)];

            case 'null':
                return null;

            case 'object':
                var mock = {};
                for (var prop in details.properties) {
                    if (!details.properties.hasOwnProperty(prop)) {
                        continue;
                    }
                    mock[prop] = mockValue(details.properties[prop])
                }
                return mock;

            default:
                return '/*  type: ' + details.type + ' */';
        }
    }

mixin props(properties)
    ul.properties
        each details, property in properties
            -
                meta = Object.keys(details).filter(function(key) {
                    return -1 === ['description', 'type'].indexOf(key);
                })

            li.property
                div.property-name
                    span.name= property
                div.property-properties
                    span.type(class="type-#{details.type}")= details.type
                    if details.readOnly
                        span.read-only(title="Read-only access") R
                    else
                        span.read-write(title="Read and write access") W

                p.description= details.description

                if details.type == 'object'
                    +props(details.properties)

                else if details.type == 'array' && details.items.properties
                    +props(details.items.properties)

                else if meta.length
                    dl.meta
                        each key in meta
                            dt= key
                            if key === 'errorCodes' && details[key]
                                dd= JSON.stringify(details[key], null, 2).slice(3, -2)
                            else
                                dd= details[key]

mixin resource(pattern, schema, methods, query)
    h2
        = schema.title || pattern
        span(class="type type-#{schema.type}")= schema.type

    if schema.description
        p= schema.description

    if pattern
        h3.pattern URL Pattern: <code>#{pattern}</code>

    if methods && methods.length
        h3.methods
            | Methods:
            each method in ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS']
                if -1 !== methods.indexOf(method)
                    span.method(class="method-#{method.toLowerCase()}")= method

    if query
        h3.query
            | GET Query Parameters:
            each value, key in query
                span.query-param
                    = key
                    if value !== ''
                        span.query-param-default= ' (' + value + ')'

    if schema.properties
        h3 Properties:
        +props(schema.properties)

    if schema.items
        h3 Items:
        section.items
            +resource(null, schema.items, null)

mixin alias(pattern, alias)
    h2
        = '* ' + pattern
        span(class="type type-alias") alias

    h3.alias
        = 'Points to '
        span.alias= alias

doctype html
html
    head
        title Monocle API Documentation
        meta(name="viewport" content="width=device-width, user-scalable=no")

    body
        style
            :stylus
                /* Main */
                html
                    font-family Arial
                    font-size 100%
                    background #ffcdd2
                    height 100%

                html, body
                    margin 0
                    padding 0

                body
                    margin 0 1em
                    background #fff
                    box-shadow 0 0 0.5em rgba(0, 0, 0, 0.25)
                    min-height: 100%

                header,
                section,
                nav
                    display block

                a
                    color #d50000

                /* Header */
                header
                    padding 1.5rem 1rem
                    background #b71c1c

                header h1
                    font-size 2em
                    font-weight bold
                    margin 0
                    padding 0
                    color #fff

                /* Nav */
                nav
                    padding 0 1em

                    h2
                        margin-top 0

                    ul.resources
                        display block
                        list-style-type none
                        padding 0
                        margin 0

                        li.route
                            display block
                            margin 0
                            padding 0

                            &:hover
                                background #ffebee

                            &.selected
                                background #ffcdd2
                                box-shadow -0.25em 0 0 #b71c1c

                            a
                                display block
                                padding 0.35em
                                text-decoration none

                            .title
                                text-decoration underline
                                font-weight bold

                            .pattern
                                font-size 0.85em
                                color #888

                            .method
                                font-size 0.65em

                .method, .type
                    get = #1b5e20
                    put = #ff6f00
                    patch = #4527a0
                    post = #01579b
                    delete = #f44336
                    options = #424242
                    base = #455a64;

                    object = #1b5e20
                    string = #4527a0
                    array = #01579b
                    integer = #ff6f00
                    alias = #424242

                    method(color)
                        background color
                        border 1px solid lighten(color, 50%)

                    font-weight bold
                    display inline-block
                    padding 0.15em 0.3em
                    border-radius 0.25em
                    color #fff
                    margin-right 0.25em
                    font-family monaco, monospace
                    box-shadow 0 0.3rem 0.2rem -0.2rem rgba(0, 0, 0, 0.25),
                        inset 0 2em 1.5em -1em rgba(255, 255, 255, 0.25)
                    method(base)

                    &.method-get
                        method(get)

                    &.method-put
                        method(put)

                    &.method-post
                        method(post)

                    &.method-patch
                        method(patch)

                    &.method-delete
                        method(delete)

                    &.method-options
                        method(options)

                    &.type-object
                        method(object)

                    &.type-array
                        method(array)

                    &.type-string
                        method(string)

                    &.type-integer
                        method(integer)

                    &.type-alias
                        method(alias)


                #details
                    .resources
                        .resource
                            display none
                            margin: 1em 0;
                            padding: 0 1em 1em;
                            background: #fcfcfc;

                pre.response, pre.schema{
                    border: 1px solid #ccc;
                    background: #f7f8f9;
                    padding: 1em;
                    border-radius: 0.15em;
                }

                .query-param{
                    display: inline-block;
                    margin: 0 0 0 0.5em;
                    padding: 0.25em 0.5em;
                    color: #fff;
                    font-weight: bold;
                    font-size: 0.85rem;
                    border-radius: 0.35em;
                    border: 2px solid rgba(255, 255, 255, 0.75);
                    font-family: monaco, monospace;
                    background: #3a3;
                    box-shadow: 0 0.3rem 0.2rem -0.2rem rgba(0, 0, 0, 0.25),
                        inset 0 2em 1.5em -1em rgba(255, 255, 255, 0.25);
                }

                .pattern code{
                    margin-right: 0.5em;
                    display: inline-block;
                    margin: 0 0.5em 0 0.5em;
                    padding: 0.2em 0.5em;
                    color: #fff;
                    font-weight: bold;
                    font-size: 0.85rem;
                    border-radius: 0.35em;
                    border: 2px solid rgba(255, 255, 255, 0.75);
                    font-family: monaco, monospace;
                    background: #444;
                    box-shadow: 0 0.3rem 0.2rem -0.2rem rgba(0, 0, 0, 0.25),
                        inset 0 2em 1.5em -1em rgba(255, 255, 255, 0.25);
                }

                ul.properties{
                    margin: 0 0 0 0.25em;
                    padding: 0 0 0 1em;
                    border-left: 1px solid #ccc;
                }

                li.property{
                    margin: 0.5em 0;
                    padding-left: 0;
                    list-style-type: none;
                }

                div.property-name{
                    float: left;
                }

                dl.meta{
                    list-style-type: none;
                    margin: 0.5em 0 1.5em;
                    padding: 0.5em;
                    border: 1px solid #ccc;
                    background: #f7f8f9;
                    font-size: 0.85em;
                    border-radius: 0.15em;
                }

                dl.meta dt{
                    float: left;
                    width: 10em;
                    font-weight: bold;
                    margin: 0;
                    padding: 0.15em 0;
                }

                dl.meta dd{
                    margin: 0 0 0 10.5em;
                    padding: 0.15em 0;
                    white-space: pre;
                }

                span.name{
                    font-weight: bold;
                    font-size: 1.15em;
                    font-family: monaco, monospace;
                }

                span.type, span.read-only, span.read-write{
                    margin-right: 0.5em;
                    display: inline-block;
                    margin: 0 0.5em 0 0.5em;
                    padding: 0.2em 0.5em;
                    color: #fff;
                    font-weight: bold;
                    font-size: 0.85rem;
                    border-radius: 0.35em;
                    background: #222;
                    border: 2px solid rgba(255, 255, 255, 0.75);
                    font-family: monaco, monospace;
                    box-shadow: 0 0.3rem 0.2rem -0.2rem rgba(0, 0, 0, 0.25),
                        inset 0 2em 1.5em -1em rgba(255, 255, 255, 0.25);
                }

                span.read-only, span.read-write{
                    margin-left: 0;
                    border-radius: 1em;
                    width: 2em;
                    height: 2em;
                    box-sizing: border-box;
                    text-align: center;
                }

                span.read-only{
                    background: #b11;
                }

                span.read-write{
                    background: #3a3;
                }

                span.alias{
                    font-family: monaco, monospace;
                }

                h2 span.type{
                    vertical-align: top;
                }

                h3.methods .method
                    font-size 0.85em

                code{
                    font-family: consolas, monaco, monospace;
                }

                @media (min-width: 630px)
                    nav
                        float left
                        width 270px

                    #details
                        margin-left 280px

        header
            h1 Monocle API Documentation
        section#content
            nav
                h2 Resources

                ul.resources
                    each route in routes
                        li.route
                            a(href="##{route.pattern}")
                                - isFirst = false
                                if !route.alias
                                    .title= (route.schema && route.schema.title) || route.pattern
                                    .pattern= route.pattern
                                    .methods
                                        each method in route.methods
                                            span.method(class="method-#{method.toLowerCase()}")= method
                                else
                                    .title= (route.schema && route.schema.title) || route.pattern
                                    .pattern= '-> ' + route.alias

            section#details
                .resources
                    each route in routes
                        .resource(id=route.pattern)
                            if route.alias
                                +alias(route.pattern, route.alias)
                            else
                                +resource(route.pattern, route.schema, route.methods, route.query)
                                h3.sample Sample Response:
                                pre.response= JSON.stringify(mockValue(route.schema), null, 2)

        script
            include app.js
